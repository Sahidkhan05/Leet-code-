
🚀 Day 13/30 – LeetCode C++ Challenge
🔹 Problem: Intersection of Two Arrays II (Easy)
🔹 Problem No.: #350
🔹 Approach Used: HashMap & Two Array Traversal
🔁 Concepts: Frequency Count, Iteration, Optimized Lookup

💡 Problem Brief:
Given two integer arrays nums1 and nums2, return an array of their intersection — each element should appear as many times as it shows in both arrays.

✅ Approach Explanation:

Pehle nums1 ka frequency map banate hain using unordered_map.

Fir nums2 ke elements check karte hain — agar map mein present ho aur count > 0 ho, toh result mein push karte hain.

Saath hi map ka count bhi reduce karte hain.

🔸 Time Complexity: O(n + m)
🔸 Space Complexity: O(n)

Code:

class Solution {
public:
    vector<int> intersect(vector<int>& nums1, vector<int>& nums2) {
        unordered_map<int,int>m;
        vector<int>result;

        for(int num: nums1)
        {
            m[num]++;
        }

        for(int num :nums2)
        {
            if(m[num] > 0)
            {
                result.push_back(num);
                m[num]--;
            }
        }
        return result;
    }
};
