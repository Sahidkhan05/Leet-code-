🚀 Day 8/30 – LeetCode C++ Challenge
 🔹 Problem: Valid Palindrome (Easy)
 🔹 Approach Used: Two Pointers
 🔁 Concepts: String Manipulation, Character Checking
💡 Problem Brief:
 Given a string s, determine if it is a palindrome, considering only alphanumeric characters and ignoring cases.

✅ Approach Explanation:
 We use two pointers, one from the start and one from the end.
Skip non-alphanumeric characters
Compare characters after converting them to lowercase
Move pointers accordingly
📈 Time Complexity: O(n)
 📦 Space Complexity: O(1)


class Solution {
public:
    bool isPalindrome(string s) {
        int left = 0;
    int right = s.length() - 1;

    while (left < right) {
        // Ignore non-alphanumeric characters
        while (left < right && !isalnum(s[left])) left++;
        while (left < right && !isalnum(s[right])) right--;

        // Compare lowercase versions
        if (tolower(s[left]) != tolower(s[right])) {
            return false;
        }

        left++;
        right--;
    }
    return true;
    }
};
