🚀 Day 5/30 – LeetCode C++ Challenge

🔹 Problem: Contains Duplicate (Easy)
🔹 Approach Used: HashSet

💡 Problem Explanation:
Given an integer array nums, return true if any value appears at least twice in the array, and false if every element is distinct.

✅ Efficient Approach:
We can use an unordered_set to efficiently track unique elements while iterating through the array.

📝 Code Implementation:

#include <vector>
#include <unordered_set>
#include <iostream>
using namespace std;

bool containsDuplicate(vector<int>& nums) {
    unordered_set<int> seen;
    for (int num : nums) {
        if (seen.count(num)) return true; // Duplicate found
        seen.insert(num);
    }
    return false;
}

int main() {
    vector<int> nums = {1, 2, 3, 4}; 
    cout << (containsDuplicate(nums) ? "true" : "false") << endl;
    return 0;
}
⏳ Complexity Analysis:
✔ Time Complexity: O(N) – Each element is checked once.
✔ Space Complexity: O(N) – Storing elements in a set.
