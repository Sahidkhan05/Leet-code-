ðŸš€ Day 10/30 â€“ LeetCode C++ Challenge
 ðŸ”¹ Problem: Valid Parentheses (LeetCode #20)
 ðŸ”¹ Approach Used: Stack
 ðŸ§  Concepts: Stack, String Traversal, Bracket Matching

ðŸ’¡ Problem Brief:
Given a string of brackets like "()", "{}[]", etc., determine if it's valid. A string is valid if: Open brackets are closed by the same type. Closed in correct order.

bool isValid(string s) {
    stack<char> st;
    for (char c : s) {
        if (c == '(' || c == '{' || c == '[') {
            st.push(c);
        } else {
            if (st.empty()) return false;
            char top = st.top();
            if ((c == ')' && top != '(') ||
                (c == '}' && top != '{') ||
                (c == ']' && top != '[')) {
                return false;
            }
            st.pop();
        }
    }
    return st.empty();
}
